spring:
  datasource:
    url: jdbc
  kafka:
    consumer:
      group-id: test
      key-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
auth:
  audience:
    service-name: test
  tenants:
    - name: test
      id: 3409e798-d567-49b1-9bae-f0be66427c54
      issuer-uri: https://login.microsoftonline.com/3409e798-d567-49b1-9bae-f0be66427c54/v2.0
      jwk-set-uri: https://login.microsoftonline.com/3409e798-d567-49b1-9bae-f0be66427c54/discovery/v2.0/keys

logging:
  url: url
  token: token

aws:
  accessKey: accessKey
  secretKey: secretKey
  bucketName: bucketName

zis:
  kafka:
    topic: "formation-test"

sfera:
  company-code: '1033'
  sfera-version: '3.00'
  source-device: 'TEST'
  recipient: '0033'
  broker-url: test
  clientId: test
  oauth-profile: test
  topic-prefix: test/