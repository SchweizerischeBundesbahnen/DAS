info:
  app:
    version: '@project.version@'

management:
  endpoint:
    health:
      probes:
        enabled: true

spring:
  security:
    oauth2:
      authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0
      resourceserver:
        jwt:
          jwk-set-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/discovery/v2.0/keys
          issuer-uri: https://login.microsoftonline.com/2cda5d11-f0ac-46b3-967d-af1b2e1bd01a/v2.0
          audience: ${AUDIENCES}

  profiles:
    active: ${STAGE:local}
  cloud:
    function:
      definition: boardToGround
    stream:
      bindings:
        boardToGround-out-0:
          destination: default
      solace:
        bindings:
          boardToGround-in-0:
            consumer:
              queue-additional-subscriptions: 90940/2/B2G/*/*/*
      binders:
        solace:
          type: solace
          environment:
            solace:
              java:
                host: ${SOLACE_HOST}
                msgVpn: ${SOLACE_VPN}
                api-properties:
                  AUTHENTICATION_SCHEME: AUTHENTICATION_SCHEME_CLIENT_CERTIFICATE
                  SSL_KEY_STORE: ${SOLACE_KEY_STORE_PATH}
                  SSL_KEY_STORE_FORMAT: JKS
                  SSL_KEY_STORE_PASSWORD: ${SOLACE_KEY_STORE_PASSWORD}
      default-binder: solace

springdoc:
  swagger-ui:
    oauth:
      use-pkce-with-authorization-code-grant: true
      clientId: ${CLIENT_ID}

endpoints:
  web:
    cors:
      path-mappings: /**
      allowed-origins: ${APPLICATION_ALLOWED_ORIGINS}
      allowed-methods: GET
      allowed-headers: "*"

auth:
  tenants:
    - name: ${TENANT1_NAME}
      issuer-uri: ${TENANT1_ISSUER}
      jwk-set-uri: ${TENANT1_JWK}
    - name: ${TENANT2_NAME}
      issuer-uri: ${TENANT2_ISSUER}
      jwk-set-uri: ${TENANT2_JWK}
  exchange:
    client-id: ${CLIENT_ID}
    client-secret: ${CLIENT_SECRET}
    scope: api://${SFERA_CLIENT_ID}/.default
