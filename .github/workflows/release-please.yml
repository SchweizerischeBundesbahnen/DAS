on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  packages: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      sfera_mock--release_created: ${{ steps.release.outputs.sfera_mock--release_created }}
      sfera_mock--version: ${{ steps.release.outputs.sfera_mock--version }}
      sfera_mock--tag_name: ${{ steps.release.outputs.sfera_mock--tag_name }}
      das_backend--release_created: ${{ steps.release.outputs.das_backend--release_created }}
      das_backend--version: ${{ steps.release.outputs.das_backend--version }}
      das_backend--tag_name: ${{ steps.release.outputs.das_backend--tag_name }}
      das_playground--release_created: ${{ steps.release.outputs.das_playground--release_created }}
      das_playground--version: ${{ steps.release.outputs.das_playground--version }}
      das_playground--tag_name: ${{ steps.release.outputs.das_playground--tag_name }}
    steps:
      #      - name: Generate token for SBB DAS Github app # allows triggering subsequent workflows
      #        id: app-token
      #        uses: actions/create-github-app-token@v1
      #        with:
      #          app-id: ${{ vars.DASGITHUBAPP_APPID }}
      #          private-key: ${{ secrets.DASGITHUBAPP_PRIVATKEY }}

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: ci/release-please-config.json
          manifest-file: ci/.release-please-manifest.json


  sfera_mock-release:
    needs: release-please
    if: needs.release-please.outputs.sfera_mock--release_created
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sfera_mock
    steps:
      - uses: actions/checkout@v4

      - run: echo "Created sfera_mock RELEASE"


  das_backend-release:
    needs: release-please
    if: needs.release-please.outputs.das_backend--release_created
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: das_backend
    steps:
      - uses: actions/checkout@v4

      - run: echo "Created das_backend RELEASE"


  das_playground-release:
    needs: release-please
    if: needs.release-please.outputs.das_playground--release_created
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: das_playground
    steps:
      - uses: actions/checkout@v4

      - run: echo "Created das_playground RELEASE"
