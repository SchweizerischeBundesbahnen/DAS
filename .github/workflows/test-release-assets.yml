name: Test Release Assets

defaults:
  run:
    working-directory: das_backend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Create container image
        #        env:
        #          IMAGE_ID: ghcr.io/${{ github.repository }}/backend
        #          VERSION: ${{ needs.release-please.outputs.das_backend--version }}
        run: |
          mvn spring-boot:build-image -Dtest=ch.sbb.backend.ApiExtractionTest
      #      - name: Run the Maven verify phase
      #        run: mvn --batch-mode --update-snapshots verify
      #      - name: Login to GitHub Container Registry
      #        if: github.ref == 'refs/heads/main'
      #        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      #      - name: Create container image
      #        if: github.ref == 'refs/heads/main'
      #        env:
      #          IMAGE_ID: ghcr.io/${{ github.repository }}/backend
      #          VERSION: main
      #        run: |
      #          # Convert to lowercase
      #          IMAGE_ID=$(echo $IMAGE_ID | tr '[:upper:]' '[:lower:]')
      #
      #          mvn spring-boot:build-image \
      #            -Dmaven.test.skip=true \
      #            -Dspring-boot.build-image.imageName=$IMAGE_ID:$VERSION
      #
      #          docker push $IMAGE_ID:$VERSION
      #      - name: Create Release
      #        id: create_release
      #        uses: actions/create-release@v1
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #        with:
      #          tag_name: test-release
      #          release_name: Test Release ${{ github.ref }}
      #          draft: false
      #          prerelease: false

      - name: List files
        run: ls ./src/main/resources

#      - name: Test Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: https://uploads.github.com/repos/SchweizerischeBundesbahnen/DAS/releases/221196711/assets{?name,label}
#          #          ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./das_backend/src/main/resources/api/api-docs.yaml
#          #          /home/runner/work/DAS/DAS/das_backend/src/main/resources/application.yaml
#          asset_name: api-docs.yaml
#          asset_content_type: application/yaml