# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: SFERA mock Java CI with Maven

defaults:
  run:
    working-directory: sfera_mock

on:
  push:
    paths:
      - 'sfera_mock/**'
    branches: [ "main" ]
  pull_request:
    paths:
      - 'sfera_mock/**'
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify
      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Create container image
        if: github.ref == 'refs/heads/main'
        env:
          IMAGE_ID: ghcr.io/${{ github.repository }}/sfera-mock
          VERSION: main
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        run: |
          # Convert to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[:upper:]' '[:lower:]')
          
          mvn spring-boot:build-image \
            -Dmaven.test.skip=true \
            -Dspring-boot.build-image.imageName=$IMAGE_ID:$VERSION
          
          docker push $IMAGE_ID:$VERSION
