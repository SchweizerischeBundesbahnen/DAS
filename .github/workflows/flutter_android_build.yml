# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter Android Build

defaults:
  run:
    working-directory: das_client

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    paths:
      - 'das_client/**'
  pull_request:
    paths:
      - 'das_client/**'
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2'
    - name: Prepare Flutter Build
      env:
        ANDROID_KEYSTORE_STRING: ${{ secrets.ANDROID_KEYSTORE }}
        ANDROID_KEYSTORE: ${{ github.workspace }}/das_client/android/das.keystore
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        echo $ANDROID_KEYSTORE_STRING | base64 -d > $ANDROID_KEYSTORE
        echo "ANDROID_KEYSTORE=$ANDROID_KEYSTORE" >> "$GITHUB_ENV"
        echo "ANDROID_KEYSTORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> "$GITHUB_ENV"
        echo "ANDROID_KEY_ALIAS=$ANDROID_KEY_ALIAS" >> "$GITHUB_ENV"
        echo "ANDROID_KEY_PASSWORD=$ANDROID_KEY_PASSWORD" >> "$GITHUB_ENV"
        flutter pub get
        flutter pub run build_runner build --delete-conflicting-outputs
    - run: flutter test
    - run: flutter build appbundle --flavor dev -t lib/main_dev.dart
    - run: flutter build appbundle --flavor inte -t lib/main_inte.dart
    - run: flutter build appbundle --flavor prod -t lib/main_prod.dart
    - name: Upload DEV App
      uses: r0adkll/upload-google-play@v1.1.3
      with:
        serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
        packageName: ch.sbb.das.client.dev
        releaseFiles: das_client/build/app/outputs/bundle/devRelease/app-dev-release.aab
        track: qa
    - name: Upload INTE App
      uses: r0adkll/upload-google-play@v1.1.3
      with:
        serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
        packageName: ch.sbb.das.client.inte
        releaseFiles: das_client/build/app/outputs/bundle/inteRelease/app-inte-release.aab
        track: qa
    - name: Upload PROD App
      uses: r0adkll/upload-google-play@v1.1.3
      with:
        serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
        packageName: ch.sbb.das.client
        releaseFiles: das_client/build/app/outputs/bundle/prodRelease/app-prod-release.aab
        track: qa