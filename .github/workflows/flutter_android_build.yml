# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter Android Build

defaults:
  run:
    working-directory: das_client/app

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - 'das_client/**'
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.4'
        cache: true

    - name: Prepare Android Secrets ðŸ¤«
      env:
        ANDROID_KEYSTORE_STRING: ${{ secrets.ANDROID_KEYSTORE }}
        ANDROID_KEYSTORE: ${{ github.workspace }}/das_client/app/android/das.keystore
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        echo $ANDROID_KEYSTORE_STRING | base64 -d > $ANDROID_KEYSTORE
        echo "ANDROID_KEYSTORE=$ANDROID_KEYSTORE" >> "$GITHUB_ENV"
        echo "ANDROID_KEYSTORE_PASSWORD=$ANDROID_KEYSTORE_PASSWORD" >> "$GITHUB_ENV"
        echo "ANDROID_KEY_ALIAS=$ANDROID_KEY_ALIAS" >> "$GITHUB_ENV"
        echo "ANDROID_KEY_PASSWORD=$ANDROID_KEY_PASSWORD" >> "$GITHUB_ENV"

    - name: Get dependencies
      run: flutter pub get

    - name: Generate sources
      uses: ./.github/actions/client_parallel_source_generator
      with:
        working-directory: 'das_client'

    - name: Build Appbundle DEV
      run: flutter build appbundle --flavor dev -t lib/main_dev.dart

    - name: Build Appbundle INTE
      run: flutter build appbundle --flavor inte -t lib/main_inte.dart

    - name: Build Appbundle PROD
      run: flutter build appbundle --flavor prod -t lib/main_prod.dart
